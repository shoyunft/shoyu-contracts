{
  "address": "0x51970628e14Bc27E2FDe043f5eC9AbA9c42eCf6E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "adapterAddress",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "isLibrary",
          "type": "bool[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "adapters",
      "outputs": [
        {
          "internalType": "address",
          "name": "adapterAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isLibrary",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adapterAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isLibrary",
          "type": "bool"
        }
      ],
      "name": "addAdapter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "adapterAddress",
          "type": "address"
        }
      ],
      "name": "setAdapterAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "setAdapterStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xab836cc4af29f7999b76bb250a04c20586e64958544102fe9ce33a046add73bb",
  "receipt": {
    "to": null,
    "from": "0x745E3182275791241eb92036a4A767664c456343",
    "contractAddress": "0x51970628e14Bc27E2FDe043f5eC9AbA9c42eCf6E",
    "transactionIndex": 1,
    "gasUsed": "626023",
    "logsBloom": "0x
    "blockHash": "0x42c3603073685f55640116410797c3fd8bc6f75909cd222d974d9e3e83654638",
    "transactionHash": "0xab836cc4af29f7999b76bb250a04c20586e64958544102fe9ce33a046add73bb",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 7169754,
        "transactionHash": "0xab836cc4af29f7999b76bb250a04c20586e64958544102fe9ce33a046add73bb",
        "address": "0x51970628e14Bc27E2FDe043f5eC9AbA9c42eCf6E",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000745e3182275791241eb92036a4a767664c456343"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x42c3603073685f55640116410797c3fd8bc6f75909cd222d974d9e3e83654638"
      }
    ],
    "blockNumber": 7169754,
    "cumulativeGasUsed": "650078",
    "status": 1,
    "byzantium": true
  },
  "args": [
    2,
    [
      "0xf780B54D0f09FB6938A2C9eDdAa13868b982c3Ae",
      "0x00000000006c3852cbEf3e08E8dF289169EdE581"
    ],
    [
      true,
      false
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "341995732b39b6fbda29df0a41772b4d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"adapterAddress\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"isLibrary\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adapters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"adapterAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLibrary\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adapterAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLibrary\",\"type\":\"bool\"}],\"name\":\"addAdapter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"adapterAddress\",\"type\":\"address\"}],\"name\":\"setAdapterAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"setAdapterStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoyu/lib/AdapterRegistry.sol\":\"AdapterRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":19066},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/shoyu/interfaces/IAdapterRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.11;\\n\\nimport { Adapter } from \\\"../lib/ShoyuStructs.sol\\\";\\n\\ninterface IAdapterRegistry {\\n    function setAdapterAddress(\\n        uint256 id,\\n        address adapterAddress\\n    ) external;\\n\\n    function setAdapterStatus(\\n        uint256 id,\\n        bool isActive\\n    ) external;\\n\\n    function addAdapter(\\n        address adapterAddress,\\n        bool isLibrary\\n    ) external;\\n}\",\"keccak256\":\"0x15ca96724a406b57bfcd096c75847e8dc7ca8286cc589ec2498386a5159b2fd9\",\"license\":\"MIT\"},\"contracts/shoyu/lib/AdapterRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.11;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../interfaces/IAdapterRegistry.sol\\\";\\nimport { Adapter } from \\\"./ShoyuStructs.sol\\\";\\n\\ncontract AdapterRegistry is IAdapterRegistry, Ownable {\\n    Adapter[] public adapters;\\n\\n    constructor(\\n        uint256 length,\\n        address[] memory adapterAddress,\\n        bool[] memory isLibrary\\n    ) {\\n        for (uint256 i; i < length; ++i) {\\n            adapters.push(Adapter(adapterAddress[i], isLibrary[i], true));\\n        }\\n    }\\n\\n    function setAdapterAddress(\\n        uint256 id,\\n        address adapterAddress\\n    ) external onlyOwner {\\n        Adapter storage adapter = adapters[id];\\n        adapter.adapterAddress = adapterAddress; \\n    }\\n\\n    function setAdapterStatus(\\n        uint256 id,\\n        bool isActive\\n    ) external onlyOwner {\\n        Adapter storage adapter = adapters[id];\\n        adapter.isActive = isActive;\\n    }\\n\\n    function addAdapter(\\n        address adapterAddress,\\n        bool isLibrary\\n    ) external onlyOwner {\\n        adapters.push(Adapter(adapterAddress, isLibrary, true));\\n    }\\n}\",\"keccak256\":\"0x4c2745678f5278c227a3dd93228dbff4fba13dacf9386b2f0b68c0c66a19c1d9\",\"license\":\"MIT\"},\"contracts/shoyu/lib/ShoyuStructs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.7;\\n\\nstruct OrderDetails {\\n    uint256 value;\\n    bytes data;\\n}\\n\\nstruct SwapExactOutDetails {\\n    address[] path;\\n    uint256 amountInMax;\\n    uint256 amountOut;\\n}\\n\\nstruct SwapExactInDetails {\\n    address[] path;\\n    uint256 amountIn;\\n    uint256 amountOutMin;\\n}\\n\\nstruct Adapter {\\n    address adapterAddress;\\n    bool isLibrary;\\n    bool isActive;\\n}\",\"keccak256\":\"0xc983dd3701c63c4b2fd8e4fce60df1d631ebb26244d8cfab2868ee6e0f24dda3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234620000d05762000c5f803803806200001d816200013c565b928339810190606081830312620000d05780516020808301516001600160401b03949293919290858111620000d05782019281601f85011215620000d057835193620000736200006d8662000162565b6200013c565b94828087838152019160051b83010191848311620000d0578301905b828210620000d557505050506040820151948511620000d057620000c094620000b992016200018c565b91620002f7565b6040516108719081620003ee8239f35b600080fd5b81516001600160a01b0381168103620000d05781529083019083016200008f565b50634e487b7160e01b600052604160045260246000fd5b60405190606082016001600160401b038111838210176200012d57604052565b62000137620000f6565b604052565b6040519190601f01601f191682016001600160401b038111838210176200012d57604052565b6020906001600160401b0381116200017c575b60051b0190565b62000186620000f6565b62000175565b9080601f83011215620000d057815190620001ab6200006d8362000162565b9182938184526020808095019260051b820101928311620000d0578301905b828210620001d9575050505090565b81518015158103620000d0578152908301908301620001ca565b50634e487b7160e01b600052603260045260246000fd5b602091815181101562000220575b60051b010190565b6200022a620001f3565b62000218565b60015468010000000000000000811015620002e7575b6001810180600155811015620002d7575b600160005281517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69190910180546001600160a01b0319166001600160a01b0392909216919091178155906020810151825460409092015161ffff60a01b1990921690151560a01b60ff60a01b161790151560a81b60ff60a81b16179055565b620002e1620001f3565b62000257565b620002f1620000f6565b62000246565b60008054336001600160a01b0319821681178355604080519496939593949093926001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908790a3835b8581106200035957505050505050565b620003c66200037a6200036d83856200020a565b516001600160a01b031690565b620003ba620003946200038e85896200020a565b51151590565b620003b1620003a26200010d565b6001600160a01b039094168452565b15156020830152565b60018186015262000230565b6000198114620003d95760010162000349565b634e487b7160e01b85526011600452602485fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634d7851ea146100a2575080634ef501ac14610099578063715018a6146100905780638da5cb5b14610087578063cf661dea1461007e578063f2fde38b146100755763fc57db501461006d57600080fd5b61000e6106c2565b5061000e610587565b5061000e6103c9565b5061000e610367565b5061000e6102c6565b5061000e610225565b346101675760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610167576101556004356100df61016a565b906100e861078c565b60015481101561015a575b7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b604051f35b6101626101b0565b6100f3565b80fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600154811015610218575b60016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b6102206101b0565b6101eb565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043560015481101561000e5760609060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6015460ff6040519173ffffffffffffffffffffffffffffffffffffffff81168352818160a01c161515602084015260a81c1615156040820152f35b503461000e576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610167576102ff61078c565b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000811682558173ffffffffffffffffffffffffffffffffffffffff60405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b60243590811515820361000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5761040161018d565b6104096103ba565b61041161078c565b604051906060820182811067ffffffffffffffff82111761057a575b60405273ffffffffffffffffffffffffffffffffffffffff80931682526020820190151581526040820190600182526104806001546801000000000000000081101561056d575b600181016001556101e0565b93909361053e5761053c946104d2915116849073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b51825491517fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff90921690151560a01b74ff0000000000000000000000000000000000000000161790151560a81b75ff00000000000000000000000000000000000000000016179055565b005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b61057561080b565b610474565b61058261080b565b61042d565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576105bf61018d565b6105c761078c565b73ffffffffffffffffffffffffffffffffffffffff80911690811561063e57600091825491817fffffffffffffffffffffffff0000000000000000000000000000000000000000841617845560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5761053c6004356107006103ba565b9061070961078c565b60015481101561077f575b7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601907fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff75ff000000000000000000000000000000000000000000835492151560a81b169116179055565b6107876101b0565b610714565b73ffffffffffffffffffffffffffffffffffffffff6000541633036107ad57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220595ce08c729617066e50e821172a79cfd804d459b51fb1158ad389cd64933c4a64736f6c634300080e0033",
  "deployedBytecode": "0x60806040526004361015610013575b600080fd5b6000803560e01c9081634d7851ea146100a2575080634ef501ac14610099578063715018a6146100905780638da5cb5b14610087578063cf661dea1461007e578063f2fde38b146100755763fc57db501461006d57600080fd5b61000e6106c2565b5061000e610587565b5061000e6103c9565b5061000e610367565b5061000e6102c6565b5061000e610225565b346101675760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610167576101556004356100df61016a565b906100e861078c565b60015481101561015a575b7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b604051f35b6101626101b0565b6100f3565b80fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600154811015610218575b60016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b6102206101b0565b6101eb565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043560015481101561000e5760609060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6015460ff6040519173ffffffffffffffffffffffffffffffffffffffff81168352818160a01c161515602084015260a81c1615156040820152f35b503461000e576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610167576102ff61078c565b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000811682558173ffffffffffffffffffffffffffffffffffffffff60405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b60243590811515820361000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5761040161018d565b6104096103ba565b61041161078c565b604051906060820182811067ffffffffffffffff82111761057a575b60405273ffffffffffffffffffffffffffffffffffffffff80931682526020820190151581526040820190600182526104806001546801000000000000000081101561056d575b600181016001556101e0565b93909361053e5761053c946104d2915116849073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b51825491517fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff90921690151560a01b74ff0000000000000000000000000000000000000000161790151560a81b75ff00000000000000000000000000000000000000000016179055565b005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b61057561080b565b610474565b61058261080b565b61042d565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576105bf61018d565b6105c761078c565b73ffffffffffffffffffffffffffffffffffffffff80911690811561063e57600091825491817fffffffffffffffffffffffff0000000000000000000000000000000000000000841617845560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5761053c6004356107006103ba565b9061070961078c565b60015481101561077f575b7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601907fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff75ff000000000000000000000000000000000000000000835492151560a81b169116179055565b6107876101b0565b610714565b73ffffffffffffffffffffffffffffffffffffffff6000541633036107ad57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220595ce08c729617066e50e821172a79cfd804d459b51fb1158ad389cd64933c4a64736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1287,
        "contract": "contracts/shoyu/lib/AdapterRegistry.sol:AdapterRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5705,
        "contract": "contracts/shoyu/lib/AdapterRegistry.sol:AdapterRegistry",
        "label": "adapters",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Adapter)6316_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Adapter)6316_storage)dyn_storage": {
        "base": "t_struct(Adapter)6316_storage",
        "encoding": "dynamic_array",
        "label": "struct Adapter[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_struct(Adapter)6316_storage": {
        "encoding": "inplace",
        "label": "struct Adapter",
        "members": [
          {
            "astId": 6311,
            "contract": "contracts/shoyu/lib/AdapterRegistry.sol:AdapterRegistry",
            "label": "adapterAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6313,
            "contract": "contracts/shoyu/lib/AdapterRegistry.sol:AdapterRegistry",
            "label": "isLibrary",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 6315,
            "contract": "contracts/shoyu/lib/AdapterRegistry.sol:AdapterRegistry",
            "label": "isActive",
            "offset": 21,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      }
    }
  }
}